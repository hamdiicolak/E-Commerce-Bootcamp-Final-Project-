// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Persistence.Contexts;

#nullable disable

namespace ProductCatalog.Persistence.Migrations
{
    [DbContext(typeof(ProductCatalogDbContext))]
    [Migration("20220617051515_mig_01")]
    partial class mig_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "LCWaikiki",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9928)
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "Defacto",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9931)
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Vakko",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9932)
                        },
                        new
                        {
                            Id = 4,
                            BrandName = "Koton",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9933)
                        },
                        new
                        {
                            Id = 5,
                            BrandName = "Mavi",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9934)
                        },
                        new
                        {
                            Id = 6,
                            BrandName = "Kiğili",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(9935)
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5905),
                            Description = "Kategorii Tanımı",
                            Name = "Ayakkabı"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5914),
                            Description = "Kategorii Tanımı",
                            Name = "Tişört"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5915),
                            Description = "Kategorii Tanımı",
                            Name = "Kot"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5916),
                            Description = "Kategorii Tanımı",
                            Name = "Gömlek"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5917),
                            Description = "Kategorii Tanımı",
                            Name = "Kazak"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5917),
                            Description = "Kategorii Tanımı",
                            Name = "Pantolon"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5918),
                            Description = "Kategorii Tanımı",
                            Name = "Ceket"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(5919),
                            Description = "Kategorii Tanımı",
                            Name = "Şort"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorName = "Mavi",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3590)
                        },
                        new
                        {
                            Id = 2,
                            ColorName = "Yeşil",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3594)
                        },
                        new
                        {
                            Id = 3,
                            ColorName = "Kırmızı",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3656)
                        },
                        new
                        {
                            Id = 4,
                            ColorName = "Sarı",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3659)
                        },
                        new
                        {
                            Id = 5,
                            ColorName = "Kahverengi",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3660)
                        },
                        new
                        {
                            Id = 6,
                            ColorName = "Mor",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3661)
                        },
                        new
                        {
                            Id = 7,
                            ColorName = "Gri",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3662)
                        },
                        new
                        {
                            Id = 8,
                            ColorName = "Siyah",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3662)
                        },
                        new
                        {
                            Id = 9,
                            ColorName = "Beyaz",
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 441, DateTimeKind.Local).AddTicks(3663)
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OfferApproved")
                        .HasColumnType("bit");

                    b.Property<int>("OfferPrice")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Offers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7955),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7957),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7958),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7959),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7960),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 5,
                            UserId = 7
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7961),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 6,
                            UserId = 5
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7962),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 7,
                            UserId = 6
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7962),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 8,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7963),
                            OfferApproved = false,
                            OfferPrice = 190,
                            ProductId = 9,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7964),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 10,
                            UserId = 4
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7965),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 11,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8011),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 12,
                            UserId = 7
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8013),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 13,
                            UserId = 5
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8013),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 14,
                            UserId = 6
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8014),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 15,
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8015),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 16,
                            UserId = 1
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8016),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 17,
                            UserId = 4
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8017),
                            OfferApproved = false,
                            OfferPrice = 190,
                            ProductId = 18,
                            UserId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8017),
                            OfferApproved = false,
                            OfferPrice = 130,
                            ProductId = 19,
                            UserId = 7
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8018),
                            OfferApproved = false,
                            OfferPrice = 120,
                            ProductId = 20,
                            UserId = 5
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8019),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 21,
                            UserId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8020),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 22,
                            UserId = 2
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8021),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 23,
                            UserId = 1
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8023),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 24,
                            UserId = 4
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8023),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 26,
                            UserId = 3
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8024),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 26,
                            UserId = 7
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8025),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 27,
                            UserId = 5
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8026),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 28,
                            UserId = 6
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8027),
                            OfferApproved = false,
                            OfferPrice = 190,
                            ProductId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8027),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8028),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 1,
                            UserId = 4
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8029),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8030),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 6,
                            UserId = 7
                        },
                        new
                        {
                            Id = 34,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8031),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 7,
                            UserId = 5
                        },
                        new
                        {
                            Id = 35,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8032),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 36,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8032),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 10,
                            UserId = 2
                        },
                        new
                        {
                            Id = 37,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8033),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 11,
                            UserId = 1
                        },
                        new
                        {
                            Id = 38,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8034),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 8,
                            UserId = 4
                        },
                        new
                        {
                            Id = 39,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8035),
                            OfferApproved = false,
                            OfferPrice = 190,
                            ProductId = 9,
                            UserId = 3
                        },
                        new
                        {
                            Id = 40,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8036),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 13,
                            UserId = 7
                        },
                        new
                        {
                            Id = 41,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8036),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 14,
                            UserId = 5
                        },
                        new
                        {
                            Id = 42,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8037),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 12,
                            UserId = 6
                        },
                        new
                        {
                            Id = 43,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8038),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 17,
                            UserId = 2
                        },
                        new
                        {
                            Id = 44,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8039),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 18,
                            UserId = 1
                        },
                        new
                        {
                            Id = 45,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8041),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 15,
                            UserId = 4
                        },
                        new
                        {
                            Id = 46,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8042),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 16,
                            UserId = 3
                        },
                        new
                        {
                            Id = 47,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8043),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 20,
                            UserId = 7
                        },
                        new
                        {
                            Id = 48,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8044),
                            OfferApproved = false,
                            OfferPrice = 190,
                            ProductId = 21,
                            UserId = 5
                        },
                        new
                        {
                            Id = 49,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8044),
                            OfferApproved = false,
                            OfferPrice = 150,
                            ProductId = 19,
                            UserId = 6
                        },
                        new
                        {
                            Id = 50,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8045),
                            OfferApproved = false,
                            OfferPrice = 155,
                            ProductId = 24,
                            UserId = 1
                        },
                        new
                        {
                            Id = 51,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8046),
                            OfferApproved = false,
                            OfferPrice = 160,
                            ProductId = 26,
                            UserId = 2
                        },
                        new
                        {
                            Id = 52,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8047),
                            OfferApproved = false,
                            OfferPrice = 165,
                            ProductId = 22,
                            UserId = 4
                        },
                        new
                        {
                            Id = 53,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8048),
                            OfferApproved = false,
                            OfferPrice = 170,
                            ProductId = 23,
                            UserId = 3
                        },
                        new
                        {
                            Id = 54,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8049),
                            OfferApproved = false,
                            OfferPrice = 175,
                            ProductId = 27,
                            UserId = 7
                        },
                        new
                        {
                            Id = 55,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8049),
                            OfferApproved = false,
                            OfferPrice = 180,
                            ProductId = 28,
                            UserId = 5
                        },
                        new
                        {
                            Id = 56,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(8050),
                            OfferApproved = false,
                            OfferPrice = 185,
                            ProductId = 26,
                            UserId = 6
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOfferable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UsingStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ColorId");

                    b.HasIndex("UserId");

                    b.HasIndex("UsingStatusId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7792),
                            Description = "Kullanıcının ürün e ait tanımı 1",
                            ImageUrl = "ayakkabi1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Yazlık Ayakkabı",
                            Price = 199m,
                            Size = "S",
                            UserId = 1,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 2,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7797),
                            Description = "Kullanıcının ürün e ait tanımı 2",
                            ImageUrl = "Tisort1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kısa Tişört",
                            Price = 199m,
                            Size = "M",
                            UserId = 2,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            CategoryId = 3,
                            ColorId = 3,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7802),
                            Description = "Kullanıcının ürün e ait tanımı 3",
                            ImageUrl = "Kot1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Dar Paça Kot",
                            Price = 199m,
                            Size = "L",
                            UserId = 3,
                            UsingStatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 4,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7803),
                            Description = "Kullanıcının ürün e ait tanımı 4",
                            ImageUrl = "Gomlek1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Ferah Gömlek",
                            Price = 99m,
                            Size = "XL",
                            UserId = 4,
                            UsingStatusId = 4
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 1,
                            CategoryId = 5,
                            ColorId = 5,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7805),
                            Description = "Kullanıcının ürün e ait tanımı 5",
                            ImageUrl = "Kazak1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Yazlık Kazak ",
                            Price = 99m,
                            Size = "XXL",
                            UserId = 5,
                            UsingStatusId = 5
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 1,
                            CategoryId = 6,
                            ColorId = 6,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7806),
                            Description = "Kullanıcının ürün e ait tanımı 6",
                            ImageUrl = "Pantolon1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kışlık Pantolon",
                            Price = 99m,
                            Size = "XS",
                            UserId = 6,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            CategoryId = 7,
                            ColorId = 7,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7808),
                            Description = "Kullanıcının ürün e ait tanım ı 7",
                            ImageUrl = "Ceket1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kışlık Ceket ",
                            Price = 150m,
                            Size = "S",
                            UserId = 7,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 1,
                            CategoryId = 8,
                            ColorId = 8,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7809),
                            Description = "Kullanıcının ürün e ait tanım ı 8",
                            ImageUrl = "Sort1.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Deniz Şortu",
                            Price = 150m,
                            Size = "M",
                            UserId = 1,
                            UsingStatusId = 3
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 9,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7811),
                            Description = "Kullanıcının ürün e ait tanım ı 9",
                            ImageUrl = "ayakkabi2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kışlık Ayakkabı",
                            Price = 150m,
                            Size = "L",
                            UserId = 2,
                            UsingStatusId = 4
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7812),
                            Description = "Kullanıcının ürün e ait tanımı 10",
                            ImageUrl = "Tisort2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Ferah Tişört",
                            Price = 150m,
                            Size = "XL",
                            UserId = 3,
                            UsingStatusId = 5
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 1,
                            CategoryId = 3,
                            ColorId = 2,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7813),
                            Description = "Kullanıcının ürün e ait tanımı 11",
                            ImageUrl = "Kot2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kışlık Kot",
                            Price = 150m,
                            Size = "XXL",
                            UserId = 4,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 3,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7816),
                            Description = "Kullanıcının ürün e ait tanımı 12",
                            ImageUrl = "Gomlek2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Uzun Kollu Gömlek",
                            Price = 150m,
                            Size = "XS",
                            UserId = 5,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 1,
                            CategoryId = 5,
                            ColorId = 4,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7817),
                            Description = "Kullanıcının ürün e ait tanımı 13",
                            ImageUrl = "Kazak2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kışlık Kazak Boğazlı",
                            Price = 150m,
                            Size = "S",
                            UserId = 6,
                            UsingStatusId = 3
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 1,
                            CategoryId = 6,
                            ColorId = 5,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7818),
                            Description = "Kullanıcının ürün e ait tanımı 14",
                            ImageUrl = "Pantolon2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Yazlık Pantolon ",
                            Price = 150m,
                            Size = "M",
                            UserId = 7,
                            UsingStatusId = 4
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 1,
                            CategoryId = 7,
                            ColorId = 6,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7820),
                            Description = "Kullanıcının ürün e ait tanımı 15",
                            ImageUrl = "Ceket2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Basic Ceket",
                            Price = 150m,
                            Size = "L",
                            UserId = 1,
                            UsingStatusId = 5
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 1,
                            CategoryId = 8,
                            ColorId = 7,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7821),
                            Description = "Kullanıcının ürün e ait tanımı 16",
                            ImageUrl = "Sort2.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Spor Şortu",
                            Price = 150m,
                            Size = "XL",
                            UserId = 2,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 8,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7822),
                            Description = "Kullanıcının ürün e ait tanımı 17",
                            ImageUrl = "ayakkabi3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Koşu Ayakkabısı",
                            Price = 150m,
                            Size = "XXL",
                            UserId = 3,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 9,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7824),
                            Description = "Kullanıcının ürün e ait tanımı 18",
                            ImageUrl = "Tisort3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Termal Tişört",
                            Price = 150m,
                            Size = "XS",
                            UserId = 4,
                            UsingStatusId = 3
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 1,
                            CategoryId = 3,
                            ColorId = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7825),
                            Description = "Kullanıcının ürün e ait tanımı 19",
                            ImageUrl = "Kot3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Likralı Kot",
                            Price = 150m,
                            Size = "S",
                            UserId = 5,
                            UsingStatusId = 4
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 2,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7827),
                            Description = "Kullanıcının ürün e ait tanımı 20",
                            ImageUrl = "Gomlek3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Takım Gömleği",
                            Price = 150m,
                            Size = "M",
                            UserId = 6,
                            UsingStatusId = 5
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 1,
                            CategoryId = 5,
                            ColorId = 3,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7829),
                            Description = "Kullanıcının ürün e ait tanımı 21",
                            ImageUrl = "Kazak3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "V Yaka Kazak",
                            Price = 150m,
                            Size = "L",
                            UserId = 7,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 1,
                            CategoryId = 6,
                            ColorId = 4,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7830),
                            Description = "Kullanıcının ürün e ait tanımı 22",
                            ImageUrl = "Pantolon3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kumaş Pantolon",
                            Price = 150m,
                            Size = "XL",
                            UserId = 1,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 1,
                            CategoryId = 7,
                            ColorId = 5,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7832),
                            Description = "Kullanıcının ürün e ait tanımı 23",
                            ImageUrl = "Ceket3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Blazer Ceket",
                            Price = 150m,
                            Size = "XXL",
                            UserId = 2,
                            UsingStatusId = 3
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 1,
                            CategoryId = 8,
                            ColorId = 6,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7833),
                            Description = "Kullanıcının ürün e ait tanımı 24",
                            ImageUrl = "Sort3.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Koşu Şortu",
                            Price = 150m,
                            Size = "XS",
                            UserId = 3,
                            UsingStatusId = 4
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 1,
                            CategoryId = 1,
                            ColorId = 7,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7834),
                            Description = "Kullanıcının ürün e ait tanımı 25",
                            ImageUrl = "ayakkabi4.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Sert Kış Botu",
                            Price = 150m,
                            Size = "S",
                            UserId = 4,
                            UsingStatusId = 5
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 1,
                            CategoryId = 2,
                            ColorId = 8,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7836),
                            Description = "Kullanıcının ürün e ait tanımı 26",
                            ImageUrl = "Tisort4.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Polo Yaka Tişört",
                            Price = 150m,
                            Size = "M",
                            UserId = 5,
                            UsingStatusId = 1
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 1,
                            CategoryId = 3,
                            ColorId = 9,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7837),
                            Description = "Kullanıcının ürün e ait tanımı 27",
                            ImageUrl = "Kot4.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "İspanyol Paça Kot",
                            Price = 150m,
                            Size = "L",
                            UserId = 6,
                            UsingStatusId = 2
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 1,
                            CategoryId = 4,
                            ColorId = 1,
                            CreatedDate = new DateTime(2022, 6, 17, 8, 15, 15, 440, DateTimeKind.Local).AddTicks(7841),
                            Description = "Kullanıcının ürün e ait tanımı 28",
                            ImageUrl = "Gomlek4.jpg",
                            IsOfferable = true,
                            IsSold = false,
                            Name = "Kısa Kollu Gömlek",
                            Price = 150m,
                            Size = "XL",
                            UserId = 7,
                            UsingStatusId = 3
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b3a6bba3-b4f8-4f0e-9b1f-54f820bead4d",
                            Email = "aalvares0@npr.org",
                            EmailConfirmed = true,
                            FirstName = "Alidia",
                            LastName = "Alvares",
                            LockoutEnabled = false,
                            NormalizedEmail = "AALVARES0@DRUPAL.ORG",
                            NormalizedUserName = "AALVARES0",
                            PasswordHash = "AQAAAAEAACcQAAAAEA17K3h57VX+EHCLWbiotMPp4i79Zrogfz1yX187F/JrsN+NStzeL4Hgw9jXf3WDvg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3dbf793e-5aee-4896-b1cf-6d8044c945e9",
                            TwoFactorEnabled = false,
                            UserName = "aalvares0"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "51c53286-8dee-4474-83d4-05dc4dbb9c7e",
                            Email = "kfrankowski1@typepad.com",
                            EmailConfirmed = true,
                            FirstName = "Korry",
                            LastName = "Frankowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "KFRANKOWSKI1@PINTEREST.COM",
                            NormalizedUserName = "KFRANKOWSKI1",
                            PasswordHash = "AQAAAAEAACcQAAAAEOmS8f8sZFlIy+ySqwR7JiCKTBL1Dr5B4uMIUzQgt5gyd2TPdkj1ZhxCjdtHTcvbgA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "86f5c0eb-90cf-46ad-9a0f-1fc52876191e",
                            TwoFactorEnabled = false,
                            UserName = "kfrankowski1"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "43b2cf37-b32c-4252-8766-28efcee73d17",
                            Email = "wmathen2@shop-pro.jp",
                            EmailConfirmed = true,
                            FirstName = "Wayne",
                            LastName = "Mathen",
                            LockoutEnabled = false,
                            NormalizedEmail = "WMATHEN2@MIIBEIAN.GOV.CN",
                            NormalizedUserName = "WMATHEN2",
                            PasswordHash = "AQAAAAEAACcQAAAAECdzhtm4ARxcgD6hQov/bnUCocvMOJZRrnn2K4hrKy7t7oatN2LSJ9HTCmwX4JzqEQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ad114b41-f471-40e8-85aa-5076325a02a8",
                            TwoFactorEnabled = false,
                            UserName = "wmathen2"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cd64ac7e-e593-47ce-9e1f-64a1d0de1f6f",
                            Email = "galoshechkin3@harvard.edu",
                            EmailConfirmed = true,
                            FirstName = "Ginelle",
                            LastName = "Aloshechkin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GALOSHECHKIN3@SQUIDOO.COM",
                            NormalizedUserName = "GALOSHECHKIN3",
                            PasswordHash = "AQAAAAEAACcQAAAAEKEhJOhssBRvk8B1nePwYsXHau69bKstLE3KMdffzHRT8BiEHoBbDQeZYIfuB6nPTg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ef59c4fa-2733-489e-ac74-8e806b355ddc",
                            TwoFactorEnabled = false,
                            UserName = "galoshechkin3"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "17f66134-c0ce-4379-b52f-8e7fdacb8ec2",
                            Email = "amcnutt4@lulu.com",
                            EmailConfirmed = true,
                            FirstName = "Andrei",
                            LastName = "McNutt",
                            LockoutEnabled = false,
                            NormalizedEmail = "AMCNUTT4@INDEPENDENT.CO.UK",
                            NormalizedUserName = "AMCNUTT4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHQd/hzKtJRy6SAAcUQTPC/ASRGd54BJuwyAQv4uFSPorZ98JjC4sZj3Ld4AJCFdKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "40c62395-ff7d-4642-87be-d620a5a7399e",
                            TwoFactorEnabled = false,
                            UserName = "amcnutt4"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32ed6b24-d33b-47fe-bb11-99432a4add1b",
                            Email = "hollis5@instagram.com",
                            EmailConfirmed = true,
                            FirstName = "Harman",
                            LastName = "Ollis",
                            LockoutEnabled = false,
                            NormalizedEmail = "HOLLIS5@TIMESONLINE.CO.UK",
                            NormalizedUserName = "HOLLIS5",
                            PasswordHash = "AQAAAAEAACcQAAAAEAzaPhRgqPjH5ixD732ZUf3X+K8FU2rQbd1s2dW36+ucIZaeAKUlq6lG9KJbrPsOoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ee7bceaa-f901-438e-afd6-af8cb1ccb5f5",
                            TwoFactorEnabled = false,
                            UserName = "hollis5"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "be9e1d6b-5c66-449a-b5f5-8eb44f4a4a57",
                            Email = "isate6@nifty.com",
                            EmailConfirmed = true,
                            FirstName = "Ivar",
                            LastName = "Sate",
                            LockoutEnabled = false,
                            NormalizedEmail = "ISATE6@GOOGLE.COM.HK",
                            NormalizedUserName = "ISATE6",
                            PasswordHash = "AQAAAAEAACcQAAAAEJLTZEDezwhgI4+iXTZZuXnep0uTycgVokdU1tMVBwcvHwU8GD4Fs/OyO9+vtKHhvQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36a52ddc-e7f4-4dcf-9bca-cb309a7dbd01",
                            TwoFactorEnabled = false,
                            UserName = "isate6"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.UsingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsingStatusDetail")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("UsingStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsingStatusDetail = "Az kullanılmış defalu"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsingStatusDetail = "Çok kullanılmış defalu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsingStatusDetail = "Yeni & Etiketli"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsingStatusDetail = "Çok fazla kullanılmış defalu"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsingStatusDetail = "Çok Az kullanılmış defalu"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Offer", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.Product", "Product")
                        .WithMany("Offers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Domain.Entities.User", "User")
                        .WithMany("UserOffers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Product", b =>
                {
                    b.HasOne("ProductCatalog.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductCatalog.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Domain.Entities.Color", "Color")
                        .WithMany("Products")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ProductCatalog.Domain.Entities.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ProductCatalog.Domain.Entities.UsingStatus", "UsingStatus")
                        .WithMany("Products")
                        .HasForeignKey("UsingStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Color");

                    b.Navigation("User");

                    b.Navigation("UsingStatus");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Color", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.Product", b =>
                {
                    b.Navigation("Offers");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.User", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("UserOffers");
                });

            modelBuilder.Entity("ProductCatalog.Domain.Entities.UsingStatus", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
